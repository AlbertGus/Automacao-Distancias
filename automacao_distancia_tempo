{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "690bec0a-1e03-42ef-92e6-3cbf739d4ca3",
   "metadata": {},
   "source": [
    "### Bibliotecas"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f233062e",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Abrir o google maps, calcular a distancia e retornar o valor\n",
    "import pandas as pd\n",
    "from selenium import webdriver\n",
    "from selenium.webdriver.chrome.service import Service\n",
    "from selenium.webdriver.common.by import By\n",
    "from selenium.webdriver.common.keys import Keys\n",
    "import time\n",
    "import os\n",
    "import datetime\n",
    "import datetime as dt\n",
    "from selenium.webdriver.chrome.options import Options"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "dc2cfb1f",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Cursos\n",
    "data = pd.read_excel(r'C:\\Users\\gusantos\\Desktop\\Descricao-Cursos-Sites\\D.Cursos(24.02)\\Percurso\\KMs-p3.xlsx')\n",
    "\n",
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e40e3478",
   "metadata": {},
   "outputs": [],
   "source": [
    "from seleniumwire import webdriver\n",
    "\n",
    "# Selenium Wire configuration to use a proxy\n",
    "proxy_username = '####'\n",
    "proxy_password = '######'\n",
    "seleniumwire_options = {\n",
    "    'proxy': {\n",
    "        'http': f'http://{proxy_username}:{proxy_password}@c2proxy.unisa.br:3128',\n",
    "        'verify_ssl': False,\n",
    "    },\n",
    "}\n",
    "\n",
    "\n",
    "chrome_options = Options()\n",
    "chrome_options.add_argument('--ignore-certificate-errors')\n",
    "\n",
    "driver = webdriver.Chrome(\n",
    "    seleniumwire_options=seleniumwire_options\n",
    ")\n",
    "driver.get('http://google.com.br')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "97dbfd16",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Abrindo a pagina especifica\n",
    "driver.get(r'https://www.google.com.br/maps/preview')\n",
    "time.sleep(2)\n",
    "driver.maximize_window()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "75d1f33f",
   "metadata": {},
   "source": [
    "### Loop for"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e53558c9",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Abrindo a pagina especifica\n",
    "driver.get(r'https://www.google.com.br/maps/preview')\n",
    "time.sleep(2)\n",
    "distancias = []\n",
    "\n",
    "# Incluindo o endereço do aluno\n",
    "driver.find_element(By.XPATH, '//*[@id=\"searchboxinput\"]').click()\n",
    "time.sleep(1)\n",
    "#Endereço do individuo\n",
    "for i, endereco in data['origem'].items():\n",
    "    unisa = data['destino'][i]\n",
    "    driver.find_element(By.XPATH, '//*[@id=\"searchboxinput\"]').send_keys(endereco)\n",
    "    time.sleep(1)\n",
    "    driver.find_element(By.XPATH, '//*[@id=\"searchboxinput\"]').send_keys(Keys.ENTER)\n",
    "    #Clicando em rotas\n",
    "    while len(driver.find_elements(By.XPATH, '//*[@id=\"QA0Szd\"]/div/div/div[1]/div[2]/div/div[1]/div/div/div[4]/div[1]/button')) < 1:\n",
    "        time.sleep(1)\n",
    "    driver.find_element(By.XPATH, '//*[@id=\"QA0Szd\"]/div/div/div[1]/div[2]/div/div[1]/div/div/div[4]/div[1]/button').click()\n",
    "    time.sleep(1)\n",
    "    #Endereço da unisa\n",
    "    while len(driver.find_elements(By.XPATH, '//*[@id=\"sb_ifc50\"]/input')) < 1:\n",
    "        time.sleep(1)\n",
    "    driver.find_element(By.XPATH, '//*[@id=\"sb_ifc50\"]/input').click()\n",
    "    time.sleep(0.5)\n",
    "    driver.find_element(By.XPATH, '//*[@id=\"sb_ifc50\"]/input').send_keys()\n",
    "    time.sleep(0.5)\n",
    "    driver.find_element(By.XPATH, '//*[@id=\"sb_ifc50\"]/input').send_keys(str(unisa))\n",
    "    time.sleep(0.5)\n",
    "    driver.find_element(By.XPATH, '//*[@id=\"directions-searchbox-0\"]/button[1]').click()\n",
    "    time.sleep(1)\n",
    "    driver.find_element(By.XPATH, '//*[@id=\"omnibox-directions\"]/div/div[2]/div/div/div/div[2]/button/img').click()\n",
    "    time.sleep(1)\n",
    "    #Pegando a distancia\n",
    "    while len(driver.find_elements(By.XPATH, '//*[@id=\"section-directions-trip-0\"]/div[1]/div/div[1]/div')) < 1:\n",
    "        time.sleep(1)\n",
    "    tempo = driver.find_element(By.XPATH, '//*[@id=\"section-directions-trip-0\"]/div[1]/div/div[1]/div[2]/div')    \n",
    "    #Original - km = driver.find_element(By.XPATH, '//*[@id=\"section-directions-trip-0\"]/div[1]/div/div[1]/div[2]/div')\n",
    "    distancias.append(tempo.text) \n",
    "    driver.get(r'https://www.google.com.br/maps/preview')\n",
    "    time.sleep(1)\n",
    "\n",
    "print(distancias)    \n",
    "print('Todos os endereços foram calculados com sucesso!')\n",
    "\n",
    "driver.quit()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "63fa999a",
   "metadata": {},
   "source": [
    "### Incluir distancias no dataframe"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "264250ff",
   "metadata": {},
   "outputs": [],
   "source": [
    "df2 = pd.DataFrame(distancias)\n",
    "print(df2.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1b762000",
   "metadata": {},
   "outputs": [],
   "source": [
    "data['Tempo-Transporte-Privado'] = distancias\n",
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ac7108e5",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Exportando o novo dataframe\n",
    "\n",
    "diretorio = r'C:\\Users\\gusantos\\Documents\\Descrição dos Cursos\\Distancia dos alunos2'\n",
    "nome_arquivo = 'parte3.1.0.xlsx'\n",
    "caminho_arquivo = os.path.join(diretorio, nome_arquivo)\n",
    "\n",
    "data.to_excel(caminho_arquivo, index=False)\n",
    "print('Distancias dos alunos extraidas com sucesso!')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4f9ea15b",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
